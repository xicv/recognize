name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        brew install cmake sdl2
        
    - name: Build for ${{ matrix.arch }}
      run: |
        cd src/cli
        if [ "${{ matrix.arch }}" = "x86_64" ]; then
          export CMAKE_OSX_ARCHITECTURES=x86_64
          export MACOSX_DEPLOYMENT_TARGET=10.15
        else
          export CMAKE_OSX_ARCHITECTURES=arm64
          export MACOSX_DEPLOYMENT_TARGET=11.0
        fi
        make clean
        make build
        
    - name: Create release package
      run: |
        cd src/cli
        mkdir -p "release-${{ matrix.arch }}"
        cp recognize "release-${{ matrix.arch }}/"
        cp README.md TUTORIAL.md INSTALL.md "release-${{ matrix.arch }}/"
        
        # Create install script
        cat > "release-${{ matrix.arch }}/install.sh" << 'EOF'
        #!/bin/bash
        set -e
        echo "Installing recognize..."
        sudo mkdir -p /usr/local/bin
        sudo cp recognize /usr/local/bin/
        sudo chmod +x /usr/local/bin/recognize
        mkdir -p ~/.recognize/models
        echo "‚úÖ Installation complete!"
        echo "Run: recognize --help"
        EOF
        chmod +x "release-${{ matrix.arch }}/install.sh"
        
        tar czf "recognize-${{ github.ref_name }}-${{ matrix.arch }}.tar.gz" "release-${{ matrix.arch }}"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: recognize-${{ matrix.arch }}
        path: src/cli/recognize-${{ github.ref_name }}-${{ matrix.arch }}.tar.gz

  create-release:
    needs: build-macos
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v3
      
    - name: Create universal binary
      run: |
        # Extract both architectures
        mkdir -p universal/recognize-universal
        tar xzf recognize-x86_64/recognize-*.tar.gz
        tar xzf recognize-arm64/recognize-*.tar.gz
        
        # Use lipo to create universal binary (if both exist)
        # For now, just use arm64 as primary
        cp recognize-arm64/release-arm64/* universal/recognize-universal/
        
        # Create universal package
        cd universal
        tar czf "recognize-${{ github.ref_name }}.tar.gz" recognize-universal/
        
    - name: Calculate checksums
      run: |
        cd universal
        sha256sum "recognize-${{ github.ref_name }}.tar.gz" > checksums.txt
        echo "SHA256: $(cat checksums.txt)"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          universal/recognize-${{ github.ref_name }}.tar.gz
          universal/checksums.txt
          recognize-x86_64/recognize-*-x86_64.tar.gz
          recognize-arm64/recognize-*-arm64.tar.gz
        body: |
          ## recognize ${{ github.ref_name }}
          
          Real-time speech recognition CLI with CoreML acceleration for macOS.
          
          ### Installation
          
          **Homebrew (recommended):**
          ```bash
          brew tap YOUR_USERNAME/recognize
          brew install recognize
          ```
          
          **Manual installation:**
          ```bash
          # Download the universal binary
          curl -L -o recognize.tar.gz https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/recognize-${{ github.ref_name }}.tar.gz
          tar xzf recognize.tar.gz
          cd recognize-universal
          ./install.sh
          ```
          
          ### What's New
          - üöÄ CoreML acceleration for optimal performance
          - üéØ Voice Activity Detection (VAD)
          - üì± Multiple Whisper models (tiny to large)
          - üåç Support for 99+ languages
          - üíæ Comprehensive model management
          - üìã Auto-copy to clipboard
          - ‚öôÔ∏è Full configuration system
          
          ### Requirements
          - macOS 11.0+ (Big Sur or later)
          - Microphone access permissions
          
          ### Quick Start
          ```bash
          recognize                 # Interactive setup
          recognize -m base.en      # Use base English model
          recognize --list-models   # Show available models
          ```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}